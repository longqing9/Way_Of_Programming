<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nyist.springmvc.dao.ResultMapper" >
  <resultMap id="BaseResultMap" type="cn.nyist.springmvc.po.Result" >
    <id column="reid" property="reid" jdbcType="VARCHAR" />
    <result column="rsno" property="rsno" jdbcType="BIGINT" />
    <result column="opid" property="opid" jdbcType="VARCHAR" />
    <result column="reurl" property="reurl" jdbcType="VARCHAR" />
    <result column="rescore" property="rescore" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="RescoreBysnoMap" type="cn.nyist.springmvc.domain.Subjectoptop" >
    <result column="subname" property="subname" jdbcType="VARCHAR" />
    <result column="optop" property="optop" jdbcType="VARCHAR" />
    <result column="rescore" property="rescore" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.nyist.springmvc.po.Result" extends="BaseResultMap" >
    <result column="retext" property="retext" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    reid, rsno, opid, reurl, rescore
  </sql>
  <sql id="Blob_Column_List" >
    retext
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.nyist.springmvc.po.ResultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.nyist.springmvc.po.ResultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from result
    where reid = #{reid,jdbcType=VARCHAR}
  </select>
  <select id="selectBysnoAndopid" resultMap="ResultMapWithBLOBs" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from result
    where rsno = #{0} and opid=#{1}
  </select>
  <select id="SelectRescoreBysno" resultMap="RescoreBysnoMap" parameterType="java.lang.Long">
  	SELECT s.subname,o.optop,r.rescore 
 	FROM `subject` s,operation o,result r
	WHERE r.rsno=#{sno,jdbcType=BIGINT} AND r.opid = o.opid AND o.opsubid = s.subid AND r.rescore >=0
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from result
    where reid = #{reid,jdbcType=VARCHAR}
  </delete>
  <delete id="DeleteresultByopidsno">
    delete from result
    where opid = #{0} and rsno = #{1}
  </delete>
  
  <delete id="deleteByExample" parameterType="cn.nyist.springmvc.po.ResultExample" >
    delete from result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.nyist.springmvc.po.Result" >
    insert into result (reid, rsno, opid, 
      reurl, rescore, retext
      )
    values (#{reid,jdbcType=VARCHAR}, #{rsno,jdbcType=BIGINT}, #{opid,jdbcType=VARCHAR}, 
      #{reurl,jdbcType=VARCHAR}, #{rescore,jdbcType=INTEGER}, #{retext,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.nyist.springmvc.po.Result" >
    insert into result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="reid != null" >
        reid,
      </if>
      <if test="rsno != null" >
        rsno,
      </if>
      <if test="opid != null" >
        opid,
      </if>
      <if test="reurl != null" >
        reurl,
      </if>
      <if test="rescore != null" >
        rescore,
      </if>
      <if test="retext != null" >
        retext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="reid != null" >
        #{reid,jdbcType=VARCHAR},
      </if>
      <if test="rsno != null" >
        #{rsno,jdbcType=BIGINT},
      </if>
      <if test="opid != null" >
        #{opid,jdbcType=VARCHAR},
      </if>
      <if test="reurl != null" >
        #{reurl,jdbcType=VARCHAR},
      </if>
      <if test="rescore != null" >
        #{rescore,jdbcType=INTEGER},
      </if>
      <if test="retext != null" >
        #{retext,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.nyist.springmvc.po.ResultExample" resultType="java.lang.Integer" >
    select count(*) from result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update result
    <set >
      <if test="record.reid != null" >
        reid = #{record.reid,jdbcType=VARCHAR},
      </if>
      <if test="record.rsno != null" >
        rsno = #{record.rsno,jdbcType=BIGINT},
      </if>
      <if test="record.opid != null" >
        opid = #{record.opid,jdbcType=VARCHAR},
      </if>
      <if test="record.reurl != null" >
        reurl = #{record.reurl,jdbcType=VARCHAR},
      </if>
      <if test="record.rescore != null" >
        rescore = #{record.rescore,jdbcType=INTEGER},
      </if>
      <if test="record.retext != null" >
        retext = #{record.retext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update result
    set reid = #{record.reid,jdbcType=VARCHAR},
      rsno = #{record.rsno,jdbcType=BIGINT},
      opid = #{record.opid,jdbcType=VARCHAR},
      reurl = #{record.reurl,jdbcType=VARCHAR},
      rescore = #{record.rescore,jdbcType=INTEGER},
      retext = #{record.retext,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update result
    set reid = #{record.reid,jdbcType=VARCHAR},
      rsno = #{record.rsno,jdbcType=BIGINT},
      opid = #{record.opid,jdbcType=VARCHAR},
      reurl = #{record.reurl,jdbcType=VARCHAR},
      rescore = #{record.rescore,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nyist.springmvc.po.Result" >
    update result
    <set >
      <if test="rsno != null" >
        rsno = #{rsno,jdbcType=BIGINT},
      </if>
      <if test="opid != null" >
        opid = #{opid,jdbcType=VARCHAR},
      </if>
      <if test="reurl != null" >
        reurl = #{reurl,jdbcType=VARCHAR},
      </if>
      <if test="rescore != null" >
        rescore = #{rescore,jdbcType=INTEGER},
      </if>
      <if test="retext != null" >
        retext = #{retext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reid = #{reid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.nyist.springmvc.po.Result" >
    update result
    set rsno = #{rsno,jdbcType=BIGINT},
      opid = #{opid,jdbcType=VARCHAR},
      reurl = #{reurl,jdbcType=VARCHAR},
      rescore = #{rescore,jdbcType=INTEGER},
      retext = #{retext,jdbcType=LONGVARCHAR}
    where reid = #{reid,jdbcType=VARCHAR}
  </update>
  <update id="resubmitByopidsnoWithBLOBs" >
    update result
    set retext = #{3}
    where opid = #{0} and rsno = #{1} 
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="cn.nyist.springmvc.po.Result" >
    update result
    set rsno = #{rsno,jdbcType=BIGINT},
      opid = #{opid,jdbcType=VARCHAR},
      reurl = #{reurl,jdbcType=VARCHAR},
      rescore = #{rescore,jdbcType=INTEGER}
    where reid = #{reid,jdbcType=VARCHAR}
  </update>
</mapper>